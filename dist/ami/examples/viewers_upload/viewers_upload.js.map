{"version":3,"sources":["../../../../ami/examples/viewers_upload/viewers_upload.js"],"names":["controls","renderer","scene","camera","threeD","lut","ctrlDown","drag","start","x","y","camUtils","invertRows","invertColumns","rotate","orientation","convention","init","animate","update","render","requestAnimationFrame","setRenderer","document","getElementById","smoothBorders","THREE","WebGLRenderer","antialias","setSize","clientWidth","clientHeight","gray","opacity","setClearColor","appendChild","domElement","Scene","staticMoving","noRotate","window","onload","onclick","click","updateLabels","labels","modality","top","innerHTML","bottom","right","left","buildGUI","stackHelper","stack","_stack","gui","dat","GUI","autoPlace","customContainer","stackFolder","addFolder","add","slice","minMax","step","listen","luts","presetLuts","lutUpdate","lutsAvailable","onChange","value","lutTexture","texture","lutDiscrete","discrete","index","dimensionsIJK","z","open","cameraFolder","directionsLabel","angle","orientationUpdate","fitBox","stackOrientation","__max","orientationMaxIndex","Math","floor","conventionUpdate","hookCallbacks","addEventListener","e","delta","onWindowResize","canvas","width","height","canvasWidth","canvasHeight","onWindowKeyPressed","event","ctrlKey","onMouseMove","clientX","clientY","threshold","intensityAuto","dynamicRange","abs","windowWidth","windowCenter","handleSeries","seriesContainer","loader","free","mergeSeries","bbox","visible","borderColor","border","console","log","worldbb","worldBoundingBox","lpsDims","Vector3","box","center","worldCenter","clone","halfDimensions","directions","xCosine","yCosine","zCosine","_filterByExtension","extension","item","toUpperCase","readMultipleFiles","evt","target","files","length","style","display","loadSequence","Promise","resolve","then","reject","myReader","FileReader","result","readAsArrayBuffer","buffer","parse","url","name","series","push","catch","error","loadSequenceGroup","fetchSequence","i","file","all","rawdata","loadSequenceContainer","data","dataGroups","dataUrl","parseUrl","mhdFile","filter","bind","rawFile"],"mappings":"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","file":"viewers_upload.js","sourcesContent":["/* globals dat*/\r\nimport CoreUtils from 'base/core/core.utils';\r\nimport LoadersVolume from 'base/loaders/loaders.volume';\r\nimport HelpersStack from 'base/helpers/helpers.stack';\r\nimport HelpersLut from 'base/helpers/helpers.lut';\r\nimport CamerasOrthographic from 'base/cameras/cameras.orthographic';\r\nimport ControlsOrthographic from 'base/controls/controls.trackballortho';\r\n\r\n// standard global variables\r\nlet controls;\r\nlet renderer;\r\nlet scene;\r\nlet camera;\r\nlet threeD;\r\nlet lut;\r\n\r\nlet ctrlDown = false;\r\nlet drag = {\r\n    start: {\r\n        x: null,\r\n        y: null,\r\n    },\r\n};\r\n\r\n// probe\r\nlet camUtils = {\r\n    invertRows: false,\r\n    invertColumns: false,\r\n    rotate: false,\r\n    orientation: 'default',\r\n    convention: 'radio',\r\n};\r\n\r\n/**\r\n * Init the scene\r\n */\r\nfunction init() {\r\n    /**\r\n     * Animation loop\r\n     */\r\n    function animate() {\r\n        // render\r\n        controls.update();\r\n        renderer.render(scene, camera);\r\n\r\n        // request new frame\r\n        requestAnimationFrame(function () {\r\n            animate();\r\n        });\r\n    }\r\n\r\n    setRenderer();\r\n\r\n    function setRenderer() {\r\n        threeD = document.getElementById('r3d');\r\n        const smoothBorders = true;\r\n        renderer = new THREE.WebGLRenderer({\r\n            antialias: smoothBorders,\r\n        });\r\n        renderer.setSize(threeD.clientWidth, threeD.clientHeight);\r\n        const gray = 0x212121;\r\n        const opacity = 1;\r\n        renderer.setClearColor(gray, opacity);\r\n\r\n        threeD.appendChild(renderer.domElement);\r\n    }\r\n\r\n// renderer\r\n\r\n    // scene\r\n    scene = new THREE.Scene();\r\n    // camera\r\n    camera = new CamerasOrthographic(\r\n        threeD.clientWidth / -2, threeD.clientWidth / 2,\r\n        threeD.clientHeight / 2, threeD.clientHeight / -2,\r\n        0.1, 10000);\r\n\r\n    // controls\r\n    controls = new ControlsOrthographic(camera, threeD);\r\n    controls.staticMoving = true;\r\n    controls.noRotate = true;\r\n    camera.controls = controls;\r\n\r\n    animate();\r\n}\r\n\r\nwindow.onload = function () {\r\n    // hookup load button\r\n    document.getElementById('buttoninput').onclick = function () {\r\n        document.getElementById('filesinput').click();\r\n    };\r\n\r\n    // init threeJS...\r\n    init();\r\n\r\n    function updateLabels(labels, modality) {\r\n        if (modality === 'CR' || modality === 'DX') return;\r\n\r\n        let top = document.getElementById('top');\r\n        top.innerHTML = labels[0];\r\n\r\n        let bottom = document.getElementById('bottom');\r\n        bottom.innerHTML = labels[1];\r\n\r\n        let right = document.getElementById('right');\r\n        right.innerHTML = labels[2];\r\n\r\n        let left = document.getElementById('left');\r\n        left.innerHTML = labels[3];\r\n    }\r\n\r\n    function buildGUI(stackHelper) {\r\n        let stack = stackHelper._stack;\r\n\r\n        let gui = new dat.GUI({\r\n            autoPlace: false,\r\n        });\r\n\r\n        let customContainer = document.getElementById('my-gui-container');\r\n        customContainer.appendChild(gui.domElement);\r\n\r\n        let stackFolder = gui.addFolder('Stack');\r\n        stackFolder.add(\r\n            stackHelper.slice, 'windowWidth', 1, stack.minMax[1] - stack.minMax[0])\r\n            .step(1).listen();\r\n        stackFolder.add(\r\n            stackHelper.slice, 'windowCenter', stack.minMax[0], stack.minMax[1])\r\n            .step(1).listen();\r\n        stackFolder.add(stackHelper.slice, 'intensityAuto').listen();\r\n        stackFolder.add(stackHelper.slice, 'invert');\r\n        stackFolder.add(stackHelper.slice, 'interpolation', 0, 1).step(1).listen();\r\n\r\n        // CREATE LUT\r\n        lut = new HelpersLut(\r\n            'my-lut-canvases',\r\n            'default',\r\n            'linear',\r\n            [[0, 0, 0, 0], [1, 1, 1, 1]],\r\n            [[0, 1], [1, 1]]);\r\n        lut.luts = HelpersLut.presetLuts();\r\n\r\n        let lutUpdate = stackFolder.add(\r\n            stackHelper.slice, 'lut', lut.lutsAvailable());\r\n        lutUpdate.onChange(function (value) {\r\n            lut.lut = value;\r\n            stackHelper.slice.lutTexture = lut.texture;\r\n        });\r\n        let lutDiscrete = stackFolder.add(lut, 'discrete', false);\r\n        lutDiscrete.onChange(function (value) {\r\n            lut.discrete = value;\r\n            stackHelper.slice.lutTexture = lut.texture;\r\n        });\r\n\r\n        let index = stackFolder.add(\r\n            stackHelper, 'index', 0, stack.dimensionsIJK.z - 1).step(1).listen();\r\n        stackFolder.open();\r\n\r\n        // camera\r\n        let cameraFolder = gui.addFolder('Camera');\r\n        let invertRows = cameraFolder.add(camUtils, 'invertRows');\r\n        invertRows.onChange(function () {\r\n            camera.invertRows();\r\n            updateLabels(camera.directionsLabel, stack.modality);\r\n        });\r\n\r\n        let invertColumns = cameraFolder.add(camUtils, 'invertColumns');\r\n        invertColumns.onChange(function () {\r\n            camera.invertColumns();\r\n            updateLabels(camera.directionsLabel, stack.modality);\r\n        });\r\n\r\n        let angle = cameraFolder.add(camera, 'angle', 0, 360).step(1).listen();\r\n        angle.onChange(function () {\r\n            updateLabels(camera.directionsLabel, stack.modality);\r\n        });\r\n\r\n        let rotate = cameraFolder.add(camUtils, 'rotate');\r\n        rotate.onChange(function () {\r\n            camera.rotate();\r\n            updateLabels(camera.directionsLabel, stack.modality);\r\n        });\r\n\r\n        let orientationUpdate = cameraFolder.add(\r\n            camUtils, 'orientation', ['default', 'axial', 'coronal', 'sagittal']);\r\n        orientationUpdate.onChange(function (value) {\r\n            camera.orientation = value;\r\n            camera.update();\r\n            camera.fitBox(2);\r\n            stackHelper.orientation = camera.stackOrientation;\r\n            updateLabels(camera.directionsLabel, stack.modality);\r\n\r\n            index.__max = stackHelper.orientationMaxIndex;\r\n            stackHelper.index = Math.floor(index.__max / 2);\r\n        });\r\n\r\n        let conventionUpdate = cameraFolder.add(\r\n            camUtils, 'convention', ['radio', 'neuro']);\r\n        conventionUpdate.onChange(function (value) {\r\n            camera.convention = value;\r\n            camera.update();\r\n            camera.fitBox(2);\r\n            updateLabels(camera.directionsLabel, stack.modality);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Connect all callbevent observesrs\r\n     */\r\n    function hookCallbacks(stackHelper) {\r\n        let stack = stackHelper._stack;\r\n        // hook up callbacks\r\n        controls.addEventListener('OnScroll', function (e) {\r\n            if (e.delta > 0) {\r\n                if (stackHelper.index >= stackHelper.orientationMaxIndex - 1) {\r\n                    return false;\r\n                }\r\n                stackHelper.index += 1;\r\n            } else {\r\n                if (stackHelper.index <= 0) {\r\n                    return false;\r\n                }\r\n                stackHelper.index -= 1;\r\n            }\r\n        });\r\n\r\n        /**\r\n         * On window resize callback\r\n         */\r\n        function onWindowResize() {\r\n            let threeD = document.getElementById('r3d');\r\n            camera.canvas = {\r\n                width: threeD.clientWidth,\r\n                height: threeD.clientHeight,\r\n            };\r\n            camera.fitBox(2);\r\n\r\n            renderer.setSize(threeD.clientWidth, threeD.clientHeight);\r\n\r\n            // update info to draw borders properly\r\n            stackHelper.slice.canvasWidth = threeD.clientWidth;\r\n            stackHelper.slice.canvasHeight = threeD.clientHeight;\r\n        }\r\n\r\n        window.addEventListener('resize', onWindowResize, false);\r\n        onWindowResize();\r\n\r\n        /**\r\n         * On key pressed callback\r\n         */\r\n        function onWindowKeyPressed(event) {\r\n            ctrlDown = event.ctrlKey;\r\n            if (!ctrlDown) {\r\n                drag.start.x = null;\r\n                drag.start.y = null;\r\n            }\r\n        }\r\n\r\n        document.addEventListener('keydown', onWindowKeyPressed, false);\r\n        document.addEventListener('keyup', onWindowKeyPressed, false);\r\n\r\n        /**\r\n         * On mouse move callback\r\n         */\r\n        function onMouseMove(event) {\r\n            if (ctrlDown) {\r\n                if (drag.start.x === null) {\r\n                    drag.start.x = event.clientX;\r\n                    drag.start.y = event.clientY;\r\n                }\r\n                let threshold = 15;\r\n\r\n                stackHelper.slice.intensityAuto = false;\r\n\r\n                let dynamicRange = stack.minMax[1] - stack.minMax[0];\r\n                dynamicRange /= threeD.clientWidth;\r\n\r\n                if (Math.abs(event.clientX - drag.start.x) > threshold) {\r\n                    // window width\r\n                    stackHelper.slice.windowWidth +=\r\n                        dynamicRange * (event.clientX - drag.start.x);\r\n                    drag.start.x = event.clientX;\r\n                }\r\n\r\n                if (Math.abs(event.clientY - drag.start.y) > threshold) {\r\n                    // window center\r\n                    stackHelper.slice.windowCenter -=\r\n                        dynamicRange * (event.clientY - drag.start.y);\r\n                    drag.start.y = event.clientY;\r\n                }\r\n            }\r\n        }\r\n\r\n        document.addEventListener('mousemove', onMouseMove);\r\n    }\r\n\r\n    /**\r\n     * Visulaize incoming data\r\n     */\r\n    function handleSeries(seriesContainer) {\r\n        // cleanup the loader and its progress bar\r\n        loader.free();\r\n        loader = null;\r\n        // prepare for slice visualization\r\n        // first stack of first series\r\n        let stack = seriesContainer[0].mergeSeries(seriesContainer)[0].stack[0];\r\n\r\n        let stackHelper = new HelpersStack(stack);\r\n        stackHelper.bbox.visible = false;\r\n        stackHelper.borderColor = '#2196F3';\r\n        stackHelper.border.visible = false;\r\n        scene.add(stackHelper);\r\n\r\n        console.log(stackHelper.stack);\r\n\r\n        // set camera\r\n        let worldbb = stack.worldBoundingBox();\r\n        let lpsDims = new THREE.Vector3(\r\n            (worldbb[1] - worldbb[0]) / 2,\r\n            (worldbb[3] - worldbb[2]) / 2,\r\n            (worldbb[5] - worldbb[4]) / 2\r\n        );\r\n\r\n        // box: {halfDimensions, center}\r\n        let box = {\r\n            center: stack.worldCenter().clone(),\r\n            halfDimensions:\r\n                new THREE.Vector3(lpsDims.x + 10, lpsDims.y + 10, lpsDims.z + 10),\r\n        };\r\n\r\n        // init and zoom\r\n        let canvas = {\r\n            width: threeD.clientWidth,\r\n            height: threeD.clientHeight,\r\n        };\r\n\r\n        camera.directions = [stack.xCosine, stack.yCosine, stack.zCosine];\r\n        camera.box = box;\r\n        camera.canvas = canvas;\r\n        camera.update();\r\n        camera.fitBox(2);\r\n\r\n        updateLabels(camera.directionsLabel, stack.modality);\r\n        buildGUI(stackHelper);\r\n        hookCallbacks(stackHelper);\r\n    }\r\n\r\n    let loader = new LoadersVolume(threeD);\r\n    let seriesContainer = [];\r\n\r\n    /**\r\n     * Filter array of data by extension\r\n     * extension {String}\r\n     * item {Object}\r\n     * @return {Boolean}\r\n     */\r\n    function _filterByExtension(extension, item) {\r\n        if (item.extension.toUpperCase() === extension.toUpperCase()) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Parse incoming files\r\n     */\r\n    function readMultipleFiles(evt) {\r\n        // hide the upload button\r\n        if (evt.target.files.length) {\r\n            document.getElementById('home-container').style.display = 'none';\r\n        }\r\n\r\n        /**\r\n         * Load sequence\r\n         */\r\n        function loadSequence(index, files) {\r\n            return Promise.resolve()\r\n            // load the file\r\n                .then(function () {\r\n                    return new Promise(function (resolve, reject) {\r\n                        let myReader = new FileReader();\r\n                        // should handle errors too...\r\n                        myReader.addEventListener('load', function (e) {\r\n                            resolve(e.target.result);\r\n                        });\r\n                        myReader.readAsArrayBuffer(files[index]);\r\n                    });\r\n                })\r\n                .then(function (buffer) {\r\n                    return loader.parse({url: files[index].name, buffer});\r\n                })\r\n                .then(function (series) {\r\n                    seriesContainer.push(series);\r\n                })\r\n                .catch(function (error) {\r\n                    window.console.log('oops... something went wrong...');\r\n                    window.console.log(error);\r\n                });\r\n        }\r\n\r\n        /**\r\n         * Load group sequence\r\n         */\r\n        function loadSequenceGroup(files) {\r\n            const fetchSequence = [];\r\n\r\n            for (let i = 0; i < files.length; i++) {\r\n                fetchSequence.push(\r\n                    new Promise((resolve, reject) => {\r\n                        const myReader = new FileReader();\r\n                        // should handle errors too...\r\n                        myReader.addEventListener('load', function (e) {\r\n                            resolve(e.target.result);\r\n                        });\r\n                        myReader.readAsArrayBuffer(files[i].file);\r\n                    })\r\n                        .then(function (buffer) {\r\n                            return {url: files[i].file.name, buffer};\r\n                        })\r\n                );\r\n            }\r\n\r\n            return Promise.all(fetchSequence)\r\n                .then((rawdata) => {\r\n                    return loader.parse(rawdata);\r\n                })\r\n                .then(function (series) {\r\n                    seriesContainer.push(series);\r\n                })\r\n                .catch(function (error) {\r\n                    window.console.log('oops... something went wrong...');\r\n                    window.console.log(error);\r\n                });\r\n        }\r\n\r\n        const loadSequenceContainer = [];\r\n\r\n        const data = [];\r\n        const dataGroups = [];\r\n        // convert object into array\r\n        for (let i = 0; i < evt.target.files.length; i++) {\r\n            let dataUrl = CoreUtils.parseUrl(evt.target.files[i].name);\r\n            if (dataUrl.extension.toUpperCase() === 'MHD' ||\r\n                dataUrl.extension.toUpperCase() === 'RAW') {\r\n                dataGroups.push(\r\n                    {\r\n                        file: evt.target.files[i],\r\n                        extension: dataUrl.extension.toUpperCase(),\r\n                    });\r\n            } else {\r\n                data.push(evt.target.files[i]);\r\n            }\r\n        }\r\n\r\n        // check if some files must be loaded together\r\n        if (dataGroups.length === 2) {\r\n            // if raw/mhd pair\r\n            const mhdFile = dataGroups.filter(_filterByExtension.bind(null, 'MHD'));\r\n            const rawFile = dataGroups.filter(_filterByExtension.bind(null, 'RAW'));\r\n            if (mhdFile.length === 1 &&\r\n                rawFile.length === 1) {\r\n                loadSequenceContainer.push(\r\n                    loadSequenceGroup(dataGroups)\r\n                );\r\n            }\r\n        }\r\n\r\n        // load the rest of the files\r\n        for (let i = 0; i < data.length; i++) {\r\n            loadSequenceContainer.push(\r\n                loadSequence(i, data)\r\n            );\r\n        }\r\n\r\n        // run the load sequence\r\n        // load sequence for all files\r\n        Promise\r\n            .all(loadSequenceContainer)\r\n            .then(function () {\r\n                handleSeries(seriesContainer);\r\n            })\r\n            .catch(function (error) {\r\n                window.console.log('oops... something went wrong...');\r\n                window.console.log(error);\r\n            });\r\n    }\r\n\r\n    // hook up file input listener\r\n    document.getElementById('filesinput')\r\n        .addEventListener('change', readMultipleFiles, false);\r\n};\r\n"]}