{"version":3,"sources":["../../../../ami/examples/viewers_upload/viewers_upload.js"],"names":["controls","renderer","scene","camera","threeD","lut","ctrlDown","drag","start","x","y","camUtils","invertRows","invertColumns","rotate","orientation","convention","init","animate","update","render","requestAnimationFrame","setRenderer","document","getElementById","smoothBorders","THREE","WebGLRenderer","antialias","setSize","clientWidth","clientHeight","gray","opacity","setClearColor","appendChild","domElement","Scene","setCamera","left","right","top","bottom","near","far","setControls","object","staticMoving","noRotate","window","onload","setFileInputOnButtonClick","onclick","click","updateLabels","labels","modality","innerHTML","buildGUI","stackHelper","createGui","stack","gui","_stack","dat","GUI","autoPlace","customContainer","stackFolder","createStackFolderOnGui","addFolder","setWindowWidth","minWidth","maxWidth","minMax","add","slice","step","listen","setWindowCenter","minCenter","maxCenter","setIntensity","setInvert","setInterpolation","minInterpolation","maxInterpolation","setLUT","createLUT","domTarget","lookUpTable","modeToApplyGradientInLut","color","luts","presetLuts","updateLUT","lutUpdate","lutsAvailable","onChange","value","lutTexture","texture","discreteLUT","lutDiscrete","discrete","index","setIndex","minIndex","maxIndex","dimensionsIJK","z","open","createCameraFolderOnGui","cameraFolder","setInvertRows","directionsLabel","setInvertColumns","angle","setRotation","setOrientation","orientationUpdate","updateOrientation","numberOfDirectionsToRecalculateCameraZoom","fitBox","stackOrientation","__max","orientationMaxIndex","putRotationAnglesSliderAtMediumPointOnGui","Math","floor","setConvention","conventionUpdate","hookCallbacks","setOnScrollControl","addEventListener","e","delta","onWindowResize","canvas","width","height","canvasWidth","canvasHeight","onWindowKeyPressed","event","ctrlKey","onMouseMove","clientX","clientY","threshold","intensityAuto","dynamicRange","abs","windowWidth","windowCenter","handleSeries","seriesContainer","loader","free","mergeSeries","bbox","visible","borderColor","border","console","log","lpsDims","calculateLPSCoordinates","worldbb","worldBoundingBox","leftRightDimension","posteriorAnteriorDimension","superiorInferiorDimension","Vector3","box","calculateCameraFieldOfView","center","worldCenter","clone","halfDimensions","createCanvas","configureCamera","directions","xCosine","yCosine","zCosine","_filterByExtension","extension","item","toUpperCase","readMultipleFiles","evt","filesHaveBeenLoaded","hideFileUploadButton","target","files","length","style","display","loadSequence","Promise","resolve","then","read","reject","myReader","FileReader","result","readAsArrayBuffer","buffer","parse","url","name","series","load","push","catch","error","loadSequenceGroup","fetchSequence","i","file","all","rawdata","loadSequenceContainer","data","dataGroups","convertObjectIntoArray","dataUrl","parseUrl","someFilesMustBeLoadedTogether","mhdFile","filter","bind","rawFile","thereIsRawMhdPair","loadTheRestOfTheFiles","runTheLoadSequenceForAllFiles","hookUpFileInputListener"],"mappings":"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","file":"viewers_upload.js","sourcesContent":["/* globals dat*/\r\nimport CoreUtils from 'base/core/core.utils';\r\nimport LoadersVolume from 'base/loaders/loaders.volume';\r\nimport HelpersStack from 'base/helpers/helpers.stack';\r\nimport HelpersLut from 'base/helpers/helpers.lut';\r\nimport CamerasOrthographic from 'base/cameras/cameras.orthographic';\r\nimport ControlsOrthographic from 'base/controls/controls.trackballortho';\r\n\r\n// standard global variables\r\nlet controls;\r\nlet renderer;\r\nlet scene;\r\nlet camera;\r\nlet threeD;\r\nlet lut;\r\n\r\nlet ctrlDown = false;\r\nlet drag = {\r\n    start: {\r\n        x: null,\r\n        y: null,\r\n    },\r\n};\r\n\r\n// probe\r\nlet camUtils = {\r\n    invertRows: false,\r\n    invertColumns: false,\r\n    rotate: false,\r\n    orientation: 'default',\r\n    convention: 'radio',\r\n};\r\n\r\n/**\r\n * Init the scene\r\n */\r\nfunction init() {\r\n    /**\r\n     * Animation loop\r\n     */\r\n    function animate() {\r\n        // render\r\n        controls.update();\r\n        renderer.render(scene, camera);\r\n\r\n        // request new frame\r\n        requestAnimationFrame(function () {\r\n            animate();\r\n        });\r\n    }\r\n\r\n    setRenderer();\r\n\r\n    function setRenderer() {\r\n        threeD = document.getElementById('r3d');\r\n        const smoothBorders = true;\r\n        renderer = new THREE.WebGLRenderer({\r\n            antialias: smoothBorders,\r\n        });\r\n        renderer.setSize(threeD.clientWidth, threeD.clientHeight);\r\n        const gray = 0x212121;\r\n        const opacity = 1;\r\n        renderer.setClearColor(gray, opacity);\r\n\r\n        threeD.appendChild(renderer.domElement);\r\n    }\r\n\r\n\r\n    scene = new THREE.Scene();\r\n\r\n    setCamera();\r\n\r\n    function setCamera() {\r\n        const left = threeD.clientWidth / -2;\r\n        const right = threeD.clientWidth / 2;\r\n        const top = threeD.clientHeight / 2;\r\n        const bottom = threeD.clientHeight / -2;\r\n        const near = 0.1;\r\n        const far = 10000;\r\n        camera = new CamerasOrthographic(\r\n            left, right,\r\n            top, bottom,\r\n            near, far);\r\n    }\r\n\r\n\r\n    setControls();\r\n\r\n    function setControls() {\r\n        const object = camera;\r\n        const domElement = threeD;\r\n        controls = new ControlsOrthographic(object, domElement);\r\n        controls.staticMoving = true;\r\n        controls.noRotate = true;\r\n        camera.controls = controls;\r\n    }\r\n\r\n    animate();\r\n}\r\n\r\nwindow.onload = function () {\r\n    setFileInputOnButtonClick();\r\n\r\n    function setFileInputOnButtonClick() {\r\n        document.getElementById('buttoninput').onclick = function () {\r\n            document.getElementById('filesinput').click();\r\n        };\r\n    }\r\n\r\n    // init threeJS...\r\n    init();\r\n\r\n    function updateLabels(labels, modality) {\r\n        if (modality === 'CR' || modality === 'DX') return;\r\n\r\n        let top = document.getElementById('top');\r\n        top.innerHTML = labels[0];\r\n\r\n        let bottom = document.getElementById('bottom');\r\n        bottom.innerHTML = labels[1];\r\n\r\n        let right = document.getElementById('right');\r\n        right.innerHTML = labels[2];\r\n\r\n        let left = document.getElementById('left');\r\n        left.innerHTML = labels[3];\r\n    }\r\n\r\n    function buildGUI(stackHelper) {\r\n        let {stack, gui} = createGui();\r\n\r\n        function createGui() {\r\n            let stack = stackHelper._stack;\r\n\r\n            let gui = new dat.GUI({\r\n                autoPlace: false,\r\n            });\r\n\r\n            let customContainer = document.getElementById('my-gui-container');\r\n            customContainer.appendChild(gui.domElement);\r\n            return {stack, gui};\r\n        }\r\n\r\n\r\n        let stackFolder = createStackFolderOnGui();\r\n\r\n        function createStackFolderOnGui() {\r\n            let stackFolder = gui.addFolder('Stack');\r\n            return stackFolder;\r\n        }\r\n\r\n\r\n        setWindowWidth();\r\n\r\n        function setWindowWidth() {\r\n            const minWidth = 1;\r\n            const maxWidth = stack.minMax[1] - stack.minMax[0];\r\n            stackFolder.add(\r\n                stackHelper.slice, 'windowWidth', minWidth, maxWidth)\r\n                .step(1).listen();\r\n        }\r\n\r\n        setWindowCenter();\r\n\r\n        function setWindowCenter() {\r\n            const minCenter = stack.minMax[0];\r\n            const maxCenter = stack.minMax[1];\r\n            stackFolder.add(\r\n                stackHelper.slice, 'windowCenter', minCenter, maxCenter)\r\n                .step(1).listen();\r\n        }\r\n\r\n        setIntensity();\r\n\r\n        function setIntensity() {\r\n            stackFolder.add(stackHelper.slice, 'intensityAuto').listen();\r\n        }\r\n\r\n        setInvert();\r\n\r\n        function setInvert() {\r\n            stackFolder.add(stackHelper.slice, 'invert');\r\n        }\r\n\r\n\r\n        setInterpolation();\r\n\r\n        function setInterpolation() {\r\n            const minInterpolation = 0;\r\n            const maxInterpolation = 1;\r\n            stackFolder.add(stackHelper.slice, 'interpolation', minInterpolation, maxInterpolation).step(1).listen();\r\n        }\r\n\r\n\r\n        // CREATE LUT\r\n\r\n        setLUT();\r\n\r\n        function setLUT() {\r\n            createLUT();\r\n\r\n            function createLUT() {\r\n                const domTarget = 'my-lut-canvases';\r\n                const lookUpTable = 'default';\r\n                const modeToApplyGradientInLut = 'linear_full';\r\n                const color = [[0, 0, 0, 0], [1, 1, 1, 1]];\r\n                const opacity = [[0, 1], [1, 1]];\r\n                lut = new HelpersLut(\r\n                    domTarget,\r\n                    lookUpTable,\r\n                    modeToApplyGradientInLut,\r\n                    color,\r\n                    opacity);\r\n                lut.luts = HelpersLut.presetLuts();\r\n            }\r\n\r\n\r\n            updateLUT();\r\n\r\n            function updateLUT() {\r\n                let lutUpdate = stackFolder.add(\r\n                    stackHelper.slice, 'lut', lut.lutsAvailable());\r\n                lutUpdate.onChange(function (value) {\r\n                    lut.lut = value;\r\n                    stackHelper.slice.lutTexture = lut.texture;\r\n                });\r\n            }\r\n\r\n            discreteLUT();\r\n\r\n            function discreteLUT() {\r\n                let lutDiscrete = stackFolder.add(lut, 'discrete', false);\r\n                lutDiscrete.onChange(function (value) {\r\n                    lut.discrete = value;\r\n                    stackHelper.slice.lutTexture = lut.texture;\r\n                });\r\n            }\r\n\r\n        }\r\n\r\n        let index = setIndex();\r\n\r\n        function setIndex() {\r\n            const minIndex = 0;\r\n            const maxIndex = stack.dimensionsIJK.z - 1;\r\n            let index = stackFolder.add(\r\n                stackHelper, 'index', minIndex, maxIndex).step(1).listen();\r\n            return index;\r\n        }\r\n\r\n        stackFolder.open();\r\n\r\n        createCameraFolderOnGui();\r\n\r\n        function createCameraFolderOnGui() {\r\n            let cameraFolder = gui.addFolder('Camera');\r\n\r\n            setInvertRows();\r\n\r\n            function setInvertRows() {\r\n                let invertRows = cameraFolder.add(camUtils, 'invertRows');\r\n                invertRows.onChange(function () {\r\n                    camera.invertRows();\r\n                    updateLabels(camera.directionsLabel, stack.modality);\r\n                });\r\n            }\r\n\r\n\r\n            function setInvertColumns() {\r\n                let invertColumns = cameraFolder.add(camUtils, 'invertColumns');\r\n                invertColumns.onChange(function () {\r\n                    camera.invertColumns();\r\n                    updateLabels(camera.directionsLabel, stack.modality);\r\n                });\r\n            }\r\n\r\n            setInvertColumns();\r\n\r\n            let angle = cameraFolder.add(camera, 'angle', 0, 360).step(1).listen();\r\n            angle.onChange(function () {\r\n                updateLabels(camera.directionsLabel, stack.modality);\r\n            });\r\n\r\n            setRotation();\r\n\r\n            function setRotation() {\r\n                let rotate = cameraFolder.add(camUtils, 'rotate');\r\n                rotate.onChange(function () {\r\n                    camera.rotate();\r\n                    updateLabels(camera.directionsLabel, stack.modality);\r\n                });\r\n            }\r\n\r\n\r\n            setOrientation();\r\n\r\n            function setOrientation() {\r\n                let orientationUpdate = cameraFolder.add(\r\n                    camUtils, 'orientation', ['default', 'axial', 'coronal', 'sagittal']);\r\n\r\n                updateOrientation();\r\n\r\n                function updateOrientation() {\r\n                    orientationUpdate.onChange(function (value) {\r\n                        camera.orientation = value;\r\n                        camera.update();\r\n\r\n                        const numberOfDirectionsToRecalculateCameraZoom = 2;\r\n                        camera.fitBox(numberOfDirectionsToRecalculateCameraZoom);\r\n                        stackHelper.orientation = camera.stackOrientation;\r\n                        updateLabels(camera.directionsLabel, stack.modality);\r\n\r\n                        index.__max = stackHelper.orientationMaxIndex;\r\n                        stackHelper.index = putRotationAnglesSliderAtMediumPointOnGui();\r\n\r\n                        function putRotationAnglesSliderAtMediumPointOnGui() {\r\n                            return Math.floor(index.__max / 2);\r\n                        }\r\n                    });\r\n                }\r\n\r\n            }\r\n\r\n            setConvention();\r\n\r\n            function setConvention() {\r\n                let conventionUpdate = cameraFolder.add(\r\n                    camUtils, 'convention', ['radio', 'neuro']);\r\n                conventionUpdate.onChange(function (value) {\r\n                    camera.convention = value;\r\n                    camera.update();\r\n                    camera.fitBox(2);\r\n                    updateLabels(camera.directionsLabel, stack.modality);\r\n                });\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Connect all callbevent observesrs\r\n     */\r\n    function hookCallbacks(stackHelper) {\r\n        let stack = stackHelper._stack;\r\n\r\n        setOnScrollControl();\r\n\r\n        function setOnScrollControl() {\r\n            controls.addEventListener('OnScroll', function (e) {\r\n                if (e.delta > 0) {\r\n                    if (stackHelper.index >= stackHelper.orientationMaxIndex - 1) {\r\n                        return false;\r\n                    }\r\n                    stackHelper.index += 1;\r\n                } else {\r\n                    if (stackHelper.index <= 0) {\r\n                        return false;\r\n                    }\r\n                    stackHelper.index -= 1;\r\n                }\r\n            });\r\n        }\r\n\r\n        /**\r\n         * On window resize callback\r\n         */\r\n        function onWindowResize() {\r\n            let threeD = document.getElementById('r3d');\r\n            camera.canvas = {\r\n                width: threeD.clientWidth,\r\n                height: threeD.clientHeight,\r\n            };\r\n            camera.fitBox(2);\r\n\r\n            renderer.setSize(threeD.clientWidth, threeD.clientHeight);\r\n\r\n            // update info to draw borders properly\r\n            stackHelper.slice.canvasWidth = threeD.clientWidth;\r\n            stackHelper.slice.canvasHeight = threeD.clientHeight;\r\n        }\r\n\r\n        window.addEventListener('resize', onWindowResize, false);\r\n        onWindowResize();\r\n\r\n        /**\r\n         * On key pressed callback\r\n         */\r\n        function onWindowKeyPressed(event) {\r\n            ctrlDown = event.ctrlKey;\r\n            if (!ctrlDown) {\r\n                drag.start.x = null;\r\n                drag.start.y = null;\r\n            }\r\n        }\r\n\r\n        document.addEventListener('keydown', onWindowKeyPressed, false);\r\n        document.addEventListener('keyup', onWindowKeyPressed, false);\r\n\r\n        /**\r\n         * On mouse move callback\r\n         */\r\n        function onMouseMove(event) {\r\n            if (ctrlDown) {\r\n                if (drag.start.x === null) {\r\n                    drag.start.x = event.clientX;\r\n                    drag.start.y = event.clientY;\r\n                }\r\n                let threshold = 15;\r\n\r\n                stackHelper.slice.intensityAuto = false;\r\n\r\n                let dynamicRange = stack.minMax[1] - stack.minMax[0];\r\n                dynamicRange /= threeD.clientWidth;\r\n\r\n                if (Math.abs(event.clientX - drag.start.x) > threshold) {\r\n                    // window width\r\n                    stackHelper.slice.windowWidth +=\r\n                        dynamicRange * (event.clientX - drag.start.x);\r\n                    drag.start.x = event.clientX;\r\n                }\r\n\r\n                if (Math.abs(event.clientY - drag.start.y) > threshold) {\r\n                    // window center\r\n                    stackHelper.slice.windowCenter -=\r\n                        dynamicRange * (event.clientY - drag.start.y);\r\n                    drag.start.y = event.clientY;\r\n                }\r\n            }\r\n        }\r\n\r\n        document.addEventListener('mousemove', onMouseMove);\r\n    }\r\n\r\n    /**\r\n     * Visulaize incoming data\r\n     */\r\n    function handleSeries(seriesContainer) {\r\n        // cleanup the loader and its progress bar\r\n        loader.free();\r\n        loader = null;\r\n        // prepare for slice visualization\r\n        // first stack of first series\r\n        let stack = seriesContainer[0].mergeSeries(seriesContainer)[0].stack[0];\r\n\r\n        let stackHelper = new HelpersStack(stack);\r\n        stackHelper.bbox.visible = false;\r\n        stackHelper.borderColor = '#2196F3';\r\n        stackHelper.border.visible = false;\r\n        scene.add(stackHelper);\r\n\r\n        console.log(stackHelper.stack);\r\n\r\n        setCamera();\r\n\r\n        function setCamera() {\r\n            let lpsDims = calculateLPSCoordinates();\r\n\r\n            function calculateLPSCoordinates() {\r\n                let worldbb = stack.worldBoundingBox();\r\n                const leftRightDimension = (worldbb[1] - worldbb[0]) / 2;\r\n                const posteriorAnteriorDimension = (worldbb[3] - worldbb[2]) / 2;\r\n                const superiorInferiorDimension = (worldbb[5] - worldbb[4]) / 2;\r\n                let lpsDims = new THREE.Vector3(\r\n                    leftRightDimension,\r\n                    posteriorAnteriorDimension,\r\n                    superiorInferiorDimension\r\n                );\r\n                return lpsDims;\r\n            }\r\n\r\n\r\n            let box = calculateCameraFieldOfView();\r\n\r\n            function calculateCameraFieldOfView() {\r\n                let box = {\r\n                    center: stack.worldCenter().clone(),\r\n                    halfDimensions:\r\n                        new THREE.Vector3(lpsDims.x + 10, lpsDims.y + 10, lpsDims.z + 10),\r\n                };\r\n                return box;\r\n            }\r\n\r\n            let canvas = createCanvas();\r\n\r\n            function createCanvas() {\r\n                let canvas = {\r\n                    width: threeD.clientWidth,\r\n                    height: threeD.clientHeight,\r\n                };\r\n                return canvas;\r\n            }\r\n\r\n\r\n            configureCamera();\r\n\r\n            function configureCamera() {\r\n                camera.directions = [stack.xCosine, stack.yCosine, stack.zCosine];\r\n                camera.box = box;\r\n                camera.canvas = canvas;\r\n                camera.update();\r\n                camera.fitBox(2);\r\n            }\r\n\r\n\r\n            updateLabels(camera.directionsLabel, stack.modality);\r\n        }\r\n\r\n        buildGUI(stackHelper);\r\n        hookCallbacks(stackHelper);\r\n    }\r\n\r\n    let loader = new LoadersVolume(threeD);\r\n    let seriesContainer = [];\r\n\r\n    /**\r\n     * Filter array of data by extension\r\n     * extension {String}\r\n     * item {Object}\r\n     * @return {Boolean}\r\n     */\r\n    function _filterByExtension(extension, item) {\r\n        if (item.extension.toUpperCase() === extension.toUpperCase()) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Parse incoming files\r\n     */\r\n    function readMultipleFiles(evt) {\r\n\r\n        if (filesHaveBeenLoaded()) {\r\n            hideFileUploadButton();\r\n        }\r\n\r\n        function filesHaveBeenLoaded() {\r\n            return evt.target.files.length;\r\n        }\r\n\r\n        function hideFileUploadButton() {\r\n            document.getElementById('home-container').style.display = 'none';\r\n        }\r\n\r\n        /**\r\n         * Load sequence\r\n         */\r\n        function loadSequence(index, files) {\r\n            return Promise.resolve()\r\n                .then(function () {\r\n\r\n                    return read();\r\n\r\n                    function read() {\r\n                        return new Promise(function (resolve, reject) {\r\n                            let myReader = new FileReader();\r\n                            myReader.addEventListener('load', function (e) {\r\n                                resolve(e.target.result);\r\n                            });\r\n                            myReader.readAsArrayBuffer(files[index]);\r\n                        });\r\n                    }\r\n                })\r\n                .then(function (buffer) {\r\n                    return parse();\r\n\r\n                    function parse() {\r\n                        return loader.parse({url: files[index].name, buffer});\r\n                    }\r\n\r\n                })\r\n                .then(function (series) {\r\n                    load();\r\n\r\n                    function load() {\r\n                        seriesContainer.push(series);\r\n                    }\r\n\r\n                })\r\n                .catch(function (error) {\r\n                    window.console.log('oops... something went wrong...');\r\n                    window.console.log(error);\r\n                });\r\n        }\r\n\r\n        /**\r\n         * Load group sequence\r\n         */\r\n        function loadSequenceGroup(files) {\r\n            const fetchSequence = [];\r\n\r\n            for (let i = 0; i < files.length; i++) {\r\n                fetchSequence.push(\r\n                    new Promise((resolve, reject) => {\r\n                        read();\r\n\r\n                        function read() {\r\n                            const myReader = new FileReader();\r\n                            myReader.addEventListener('load', function (e) {\r\n                                resolve(e.target.result);\r\n                            });\r\n                            myReader.readAsArrayBuffer(files[i].file);\r\n                        }\r\n\r\n                    })\r\n                        .then(function (buffer) {\r\n                            return parse();\r\n\r\n                            function parse() {\r\n                                return {url: files[i].file.name, buffer};\r\n                            }\r\n\r\n                        })\r\n                );\r\n            }\r\n\r\n            return Promise.all(fetchSequence)\r\n                .then((rawdata) => {\r\n                    return loader.parse(rawdata);\r\n                })\r\n                .then(function (series) {\r\n                    seriesContainer.push(series);\r\n                })\r\n                .catch(function (error) {\r\n                    window.console.log('oops... something went wrong...');\r\n                    window.console.log(error);\r\n                });\r\n        }\r\n\r\n        const loadSequenceContainer = [];\r\n\r\n        const data = [];\r\n        const dataGroups = [];\r\n\r\n        convertObjectIntoArray();\r\n\r\n        function convertObjectIntoArray() {\r\n            for (let i = 0; i < evt.target.files.length; i++) {\r\n                let dataUrl = CoreUtils.parseUrl(evt.target.files[i].name);\r\n                if (dataUrl.extension.toUpperCase() === 'MHD' ||\r\n                    dataUrl.extension.toUpperCase() === 'RAW') {\r\n                    dataGroups.push(\r\n                        {\r\n                            file: evt.target.files[i],\r\n                            extension: dataUrl.extension.toUpperCase(),\r\n                        });\r\n                } else {\r\n                    data.push(evt.target.files[i]);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (someFilesMustBeLoadedTogether()) {\r\n            function someFilesMustBeLoadedTogether() {\r\n                return dataGroups.length === 2;\r\n            }\r\n\r\n            const mhdFile = dataGroups.filter(_filterByExtension.bind(null, 'MHD'));\r\n            const rawFile = dataGroups.filter(_filterByExtension.bind(null, 'RAW'));\r\n            if (thereIsRawMhdPair()) {\r\n                function thereIsRawMhdPair() {\r\n                    return mhdFile.length === 1 &&\r\n                        rawFile.length === 1;\r\n                }\r\n\r\n                loadSequenceContainer.push(\r\n                    loadSequenceGroup(dataGroups)\r\n                );\r\n            }\r\n        }\r\n        loadTheRestOfTheFiles();\r\n\r\n        function loadTheRestOfTheFiles() {\r\n            for (let i = 0; i < data.length; i++) {\r\n                loadSequenceContainer.push(\r\n                    loadSequence(i, data)\r\n                );\r\n            }\r\n        }\r\n\r\n        runTheLoadSequenceForAllFiles();\r\n\r\n        function runTheLoadSequenceForAllFiles() {\r\n            Promise\r\n                .all(loadSequenceContainer)\r\n                .then(function () {\r\n                    handleSeries(seriesContainer);\r\n                })\r\n                .catch(function (error) {\r\n                    window.console.log('oops... something went wrong...');\r\n                    window.console.log(error);\r\n                });\r\n        }\r\n    }\r\n\r\n    hookUpFileInputListener();\r\n\r\n    function hookUpFileInputListener() {\r\n        document.getElementById('filesinput')\r\n            .addEventListener('change', readMultipleFiles, false);\r\n\r\n    }\r\n};\r\n\r\n\r\n"]}