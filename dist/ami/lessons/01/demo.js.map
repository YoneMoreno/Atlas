{"version":3,"sources":["../../../../ami/lessons/01/demo.js"],"names":["setupRenderer","container","renderer","document","getElementById","smootBorders","THREE","WebGLRenderer","antialias","setSize","offsetWidth","offsetHeight","greyBackgroundColor","alpha","setClearColor","setPixelRatio","window","devicePixelRatio","appendChild","domElement","scene","setupScene","Scene","camera","setupCamera","fov","aspect","near","far","PerspectiveCamera","position","x","y","z","controls","setupControlls","AMI","TrackballControl","onWindowResize","updateProjectionMatrixToDetermineHowToDisplay3DDataas2DImage","updateProjectionMatrix","addEventListener","gui","stackHelper","createGui","stack","dat","GUI","autoPlace","guiElementId","customContainer","createStackPanel","stackFolder","index","orientation","stackGuiLabel","addFolder","indexGuiLabel","createIndexSlider","min","max","dimensionsIJK","add","step","listen","createOrientationSlider","orientationGuiLabel","orientationMin","orientationMax","addOrientationEventListener","onChange","__max","orientationMaxIndex","centerIndexSliderOnGuiFormula","Math","floor","open","createSlicePanel","sliceFolder","createWindowWidthSlider","vindowWidthGuiLabel","minWindowWidth","maxWindowWidth","minMax","slice","createWindowCenterSlider","windowCenterGuiLabel","windowCenterMinValue","windowCenterMaxValue","addColorImageEventListeners","createBorderBoxPanel","boundingBoxGuiLabel","bboxFolder","createVisibleCheckBox","visibleGuiLabel","bbox","createBorderBoxColorPicker","colorGuiLabel","addColor","createBorder","borderFolder","createBorderPanel","borderGuiLabel","createVisibleBorderCheckBox","border","createBorderColorPicker","animate","update","render","requestAnimationFrame","loader","createLoader","VolumeLoader","urlEndings","files","map","currentUrlEnding","fileUrl","load","then","series","mergeFilesIntoACleanSeriesStackFrameStructure","data","mergeSeries","getCurrentStack","free","createStackHelperToOperateEasilyWithCurrentImage","StackHelper","greenColor","redColor","color","centerLPS","centerCamera","worldCenter","lookAt","centerImage","target","set","catch","error","console","log"],"mappings":"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","file":"demo.js","sourcesContent":["var {container, renderer} = setupRenderer();\r\n\r\nfunction setupRenderer() {\r\n    var container = document.getElementById('container');\r\n    const smootBorders = true;\r\n    var renderer = new THREE.WebGLRenderer({\r\n        antialias: smootBorders\r\n    });\r\n    renderer.setSize(container.offsetWidth, container.offsetHeight);\r\n    const greyBackgroundColor = 0x353535;\r\n    const alpha = 1;\r\n    renderer.setClearColor(greyBackgroundColor, alpha);\r\n    renderer.setPixelRatio(window.devicePixelRatio);\r\n    container.appendChild(renderer.domElement);\r\n    return {container, renderer};\r\n}\r\n\r\nvar scene = setupScene();\r\n\r\nfunction setupScene() {\r\n    return new THREE.Scene();\r\n}\r\n\r\nvar camera = setupCamera();\r\n\r\nfunction setupCamera() {\r\n    const fov = 45;\r\n    const aspect = container.offsetWidth / container.offsetHeight;\r\n    const near = 0.01;\r\n    const far = 10000000;\r\n\r\n    var camera = new THREE.PerspectiveCamera(fov, aspect, near, far);\r\n\r\n    camera.position.x = 150;\r\n    camera.position.y = 150;\r\n    camera.position.z = 100;\r\n\r\n    return camera;\r\n}\r\n\r\nvar controls = setupControlls();\r\n\r\nfunction setupControlls() {\r\n    return new AMI.TrackballControl(camera, container);\r\n}\r\n\r\nfunction onWindowResize() {\r\n    camera.aspect = container.offsetWidth / container.offsetHeight;\r\n    updateProjectionMatrixToDetermineHowToDisplay3DDataas2DImage();\r\n    renderer.setSize(container.offsetWidth, container.offsetHeight);\r\n\r\n    function updateProjectionMatrixToDetermineHowToDisplay3DDataas2DImage() {\r\n        camera.updateProjectionMatrix();\r\n    }\r\n}\r\n\r\nwindow.addEventListener('resize', onWindowResize, false);\r\n\r\n\r\nfunction gui(stackHelper) {\r\n\r\n    var {stack, gui} = createGui();\r\n\r\n    function createGui() {\r\n        var stack = stackHelper.stack;\r\n        var gui = new dat.GUI({\r\n            autoPlace: false,\r\n        });\r\n        const guiElementId = 'my-gui-container';\r\n        var customContainer = document.getElementById(guiElementId);\r\n        customContainer.appendChild(gui.domElement);\r\n        return {stack, gui};\r\n    }\r\n\r\n    var {stackFolder, index, orientation} = createStackPanel();\r\n\r\n    function createStackPanel() {\r\n        const stackGuiLabel = 'Stack';\r\n        var stackFolder = gui.addFolder(stackGuiLabel);\r\n\r\n        const indexGuiLabel = 'index';\r\n        var index = createIndexSlider();\r\n\r\n        function createIndexSlider() {\r\n            const min = 0;\r\n            const max = stack.dimensionsIJK.z - 1;\r\n\r\n            var index = stackFolder\r\n                .add(stackHelper, indexGuiLabel, min, max)\r\n                .step(1)\r\n                .listen();\r\n\r\n            return index;\r\n        }\r\n\r\n        var orientation = createOrientationSlider();\r\n\r\n        function createOrientationSlider() {\r\n            const orientationGuiLabel = 'orientation';\r\n            const orientationMin = 0;\r\n            const orientationMax = 2;\r\n\r\n            var orientation = stackFolder\r\n                .add(stackHelper, orientationGuiLabel, orientationMin, orientationMax)\r\n                .step(1)\r\n                .listen();\r\n\r\n            return orientation;\r\n        }\r\n\r\n        return {stackFolder, index, orientation};\r\n    }\r\n\r\n    addOrientationEventListener();\r\n\r\n    function addOrientationEventListener() {\r\n        orientation.onChange(function () {\r\n            index.__max = stackHelper.orientationMaxIndex;\r\n            const centerIndexSliderOnGuiFormula = Math.floor(index.__max / 2);\r\n            stackHelper.index = centerIndexSliderOnGuiFormula;\r\n        });\r\n    }\r\n\r\n    stackFolder.open();\r\n\r\n\r\n    createSlicePanel();\r\n\r\n    function createSlicePanel() {\r\n        var sliceFolder = gui.addFolder('Slice');\r\n\r\n        createWindowWidthSlider();\r\n\r\n        function createWindowWidthSlider() {\r\n            const vindowWidthGuiLabel = 'windowWidth';\r\n            const minWindowWidth = 1;\r\n            const maxWindowWidth = stack.minMax[1] - stack.minMax[0];\r\n            sliceFolder\r\n                .add(stackHelper.slice, vindowWidthGuiLabel, minWindowWidth, maxWindowWidth)\r\n                .step(1)\r\n                .listen();\r\n        }\r\n\r\n\r\n        createWindowCenterSlider();\r\n\r\n        function createWindowCenterSlider() {\r\n            const windowCenterGuiLabel = 'windowCenter';\r\n            const windowCenterMinValue = stack.minMax[0];\r\n            const windowCenterMaxValue = stack.minMax[1];\r\n\r\n            sliceFolder\r\n                .add(stackHelper.slice, windowCenterGuiLabel, windowCenterMinValue, windowCenterMaxValue)\r\n                .step(1)\r\n                .listen();\r\n        }\r\n\r\n        addColorImageEventListeners();\r\n\r\n        function addColorImageEventListeners() {\r\n            sliceFolder.add(stackHelper.slice, 'intensityAuto').listen();\r\n            sliceFolder.add(stackHelper.slice, 'invert');\r\n        }\r\n\r\n        sliceFolder.open();\r\n    }\r\n\r\n    createBorderBoxPanel();\r\n\r\n    function createBorderBoxPanel() {\r\n        const boundingBoxGuiLabel = 'Bounding Box';\r\n        var bboxFolder = gui.addFolder(boundingBoxGuiLabel);\r\n\r\n        createVisibleCheckBox();\r\n\r\n        function createVisibleCheckBox() {\r\n            const visibleGuiLabel = 'visible';\r\n            bboxFolder.add(stackHelper.bbox, visibleGuiLabel);\r\n        }\r\n\r\n        createBorderBoxColorPicker();\r\n\r\n        function createBorderBoxColorPicker() {\r\n            const colorGuiLabel = 'color';\r\n            bboxFolder.addColor(stackHelper.bbox, colorGuiLabel);\r\n        }\r\n\r\n        bboxFolder.open();\r\n    }\r\n\r\n    createBorder();\r\n\r\n    function createBorder() {\r\n        var borderFolder = createBorderPanel();\r\n\r\n        function createBorderPanel() {\r\n            const borderGuiLabel = 'Border';\r\n            var borderFolder = gui.addFolder(borderGuiLabel);\r\n            return borderFolder;\r\n        }\r\n\r\n        createVisibleBorderCheckBox();\r\n\r\n        function createVisibleBorderCheckBox() {\r\n            const visibleGuiLabel = 'visible';\r\n            borderFolder.add(stackHelper.border, visibleGuiLabel);\r\n        }\r\n\r\n        createBorderColorPicker();\r\n\r\n        function createBorderColorPicker() {\r\n            const colorGuiLabel = 'color';\r\n            borderFolder.addColor(stackHelper.border, colorGuiLabel);\r\n        }\r\n\r\n        borderFolder.open();\r\n    }\r\n\r\n}\r\n\r\nfunction animate() {\r\n    controls.update();\r\n    renderer.render(scene, camera);\r\n\r\n    // request new frame\r\n    requestAnimationFrame(function () {\r\n        animate();\r\n    });\r\n}\r\n\r\nanimate();\r\n\r\nvar loader = createLoader();\r\n\r\nfunction createLoader() {\r\n    var loader = new AMI.VolumeLoader(container);\r\n    return loader;\r\n}\r\n\r\n\r\nvar urlEndings = [\r\n    '36444280',\r\n    '36444294',\r\n    '36444308',\r\n    '36444322',\r\n    '36444336',\r\n    '36444350',\r\n    '36444364',\r\n    '36444378',\r\n    '36444392',\r\n    '36444406',\r\n    '36444434',\r\n    '36444448',\r\n    '36444462',\r\n    '36444476',\r\n    '36444490',\r\n    '36444504',\r\n    '36444518',\r\n    '36444532',\r\n    '36746856'\r\n];\r\nvar files = urlEndings.map(function (currentUrlEnding) {\r\n    const fileUrl = 'https://cdn.rawgit.com/FNNDSC/data/master/dicom/adi_brain/';\r\n    return fileUrl + currentUrlEnding;\r\n});\r\n\r\nloader\r\n    .load(files)\r\n    .then(function () {\r\n        var series = mergeFilesIntoACleanSeriesStackFrameStructure();\r\n\r\n        function mergeFilesIntoACleanSeriesStackFrameStructure() {\r\n            var series = loader.data[0].mergeSeries(loader.data);\r\n            return series;\r\n        }\r\n\r\n        var stack = getCurrentStack();\r\n\r\n        function getCurrentStack() {\r\n            var stack = series[0].stack[0];\r\n            return stack;\r\n        }\r\n\r\n        loader.free();\r\n        loader = null;\r\n\r\n        var stackHelper = createStackHelperToOperateEasilyWithCurrentImage();\r\n\r\n\r\n        function createStackHelperToOperateEasilyWithCurrentImage() {\r\n            var stackHelper = new AMI.StackHelper(stack);\r\n            const greenColor = 0x8bc34a;\r\n            const redColor = 0xf44336;\r\n            stackHelper.bbox.color = greenColor;\r\n            stackHelper.border.color = redColor;\r\n\r\n            scene.add(stackHelper);\r\n            return stackHelper;\r\n        }\r\n\r\n        gui(stackHelper);\r\n\r\n        var centerLPS = centerCamera();\r\n\r\n        function centerCamera() {\r\n            var centerLPS = stackHelper.stack.worldCenter();\r\n            camera.lookAt(centerLPS.x, centerLPS.y, centerLPS.z);\r\n            camera.updateProjectionMatrix();\r\n            return centerLPS;\r\n        }\r\n\r\n        centerImage();\r\n\r\n        function centerImage() {\r\n            controls.target.set(centerLPS.x, centerLPS.y, centerLPS.z);\r\n        }\r\n\r\n    })\r\n    .catch(function (error) {\r\n        window.console.log('oops... something went wrong...');\r\n        window.console.log(error);\r\n    });\r\n\r\n\r\n"]}