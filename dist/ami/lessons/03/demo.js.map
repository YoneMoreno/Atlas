{"version":3,"sources":["../../../../ami/lessons/03/demo.js"],"names":["newRenderer","setRenderer","container","renderer","scene","THREE","Scene","camera","setCamera","controls","setControls","onWindowResize","numberOfDirectionsToRecalculateZoom","canvas","width","offsetWidth","height","offsetHeight","fitBox","setSize","attachEventListenerOnWindowLoad","window","addEventListener","gui","stackHelper","myGuiContainerId","dat","GUI","autoPlace","customContainer","document","getElementById","appendChild","domElement","camUtils","Invertir_Eje_X","Invertir_Eje_Y","Rotar_Derecha","rotate","Orientacion","Convencion","cameraFolder","addFolder","add","onChange","invertRows","invertColumns","step","listen","medicalImageAxisNames","orientationUpdate","value","orientation","update","numberOfDirectionsToRecalculateCameraDimension","stackOrientation","medicalConvention","modesToVisualizeImage","conventionUpdate","convention","open","stackFolder","guiIndexLabel","firstSeriesImage","lastSeriesImage","Math","max","stack","dimensionsIJK","x","y","z","modeToApplySlicing","minValue","maxValue","slice","animate","render","requestAnimationFrame","loader","AMI","VolumeLoader","file","load","then","series","mergeFilesIntoCleanSeriesStackFrameStructure","createStackOfASeriesOfImages","detachLoaderAndProgressBarFromDOM","createStackHelperToManipulateOrientationAndSliceDisplayed","bbox","visible","orangeColor","border","color","worldbb","worldBoundingBox","adjustBorderBoxStackHelperDimensionsToFitInWindow","Vector3","lpsDims","box","center","worldCenter","clone","halfDimensions","initCanvasAndZoom","clientWidth","clientHeight","ratioBetweenTheAdjacentCatechusAndHypotenuse","xCosine","yCosine","zCosine","directions","target","data","mergeSeries","free","StackHelper","catch","error","console","log","smoothBorders","WebGLRenderer","antialias","blackColor","alpha","setClearColor","setPixelRatio","devicePixelRatio","left","right","top","bottom","near","far","OrthographicCamera","TrackballOrthoControl","staticMoving","noRotate"],"mappings":"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","file":"demo.js","sourcesContent":["/* globals dat, AMI*/\r\n\r\n\r\nvar newRenderer = setRenderer();\r\nvar container = newRenderer.container;\r\nvar renderer = newRenderer.renderer;\r\nvar scene = new THREE.Scene();\r\nvar camera = setCamera();\r\nvar controls = setControls();\r\n\r\n\r\nfunction onWindowResize() {\r\n    const numberOfDirectionsToRecalculateZoom = 2;\r\n\r\n    camera.canvas = {\r\n        width: container.offsetWidth,\r\n        height: container.offsetHeight,\r\n    };\r\n    camera.fitBox(numberOfDirectionsToRecalculateZoom);\r\n    renderer.setSize(container.offsetWidth, container.offsetHeight);\r\n}\r\n\r\nconst attachEventListenerOnWindowLoad = true;\r\nwindow.addEventListener('resize', onWindowResize, attachEventListenerOnWindowLoad);\r\n\r\nfunction gui(stackHelper) {\r\n    const myGuiContainerId = 'my-gui-container';\r\n    var gui = new dat.GUI({\r\n        autoPlace: false\r\n    });\r\n\r\n    var customContainer = document.getElementById(myGuiContainerId);\r\n    customContainer.appendChild(gui.domElement);\r\n\r\n    var camUtils = {\r\n        Invertir_Eje_X: false,\r\n        Invertir_Eje_Y: false,\r\n        Rotar_Derecha: false,\r\n        rotate: 0,\r\n        Orientacion: 'axial',\r\n        Convencion: 'radio',\r\n    };\r\n\r\n    var cameraFolder = gui.addFolder('Camera');\r\n    var Invertir_Eje_X = cameraFolder.add(camUtils, 'Invertir_Eje_X');\r\n    Invertir_Eje_X.onChange(function () {\r\n        camera.invertRows();\r\n    });\r\n\r\n    var Invertir_Eje_Y = cameraFolder.add(camUtils, 'Invertir_Eje_Y');\r\n    Invertir_Eje_Y.onChange(function () {\r\n        camera.invertColumns();\r\n    });\r\n\r\n    var Rotar_Derecha = cameraFolder.add(camUtils, 'Rotar_Derecha');\r\n    Rotar_Derecha.onChange(function () {\r\n        camera.rotate();\r\n    });\r\n\r\n    cameraFolder\r\n        .add(camera, 'angle', 0, 360)\r\n        .step(1)\r\n        .listen();\r\n\r\n    const Orientacion = 'Orientacion';\r\n    const medicalImageAxisNames = ['axial', 'coronal', 'sagittal'];\r\n\r\n    let orientationUpdate = cameraFolder.add(camUtils, Orientacion, medicalImageAxisNames);\r\n    orientationUpdate.onChange(function (value) {\r\n        camera.orientation = value;\r\n        camera.update();\r\n        const numberOfDirectionsToRecalculateCameraDimension = 2;\r\n        camera.fitBox(numberOfDirectionsToRecalculateCameraDimension);\r\n        stackHelper.orientation = camera.stackOrientation;\r\n    });\r\n\r\n    const medicalConvention = 'Convencion';\r\n    const modesToVisualizeImage = ['radio', 'neuro'];\r\n\r\n    let conventionUpdate = cameraFolder.add(camUtils, medicalConvention, modesToVisualizeImage);\r\n    conventionUpdate.onChange(function (value) {\r\n        camera.convention = value;\r\n        camera.update();\r\n        camera.fitBox(2);\r\n    });\r\n\r\n    cameraFolder.open();\r\n\r\n    var stackFolder = gui.addFolder('Stack');\r\n\r\n    const guiIndexLabel = 'index';\r\n    const firstSeriesImage = 0;\r\n    const lastSeriesImage = Math.max(stackHelper.stack.dimensionsIJK.x - 1, stackHelper.stack.dimensionsIJK.y - 1, stackHelper.stack.dimensionsIJK.z - 1);\r\n    stackFolder\r\n        .add(stackHelper, guiIndexLabel, firstSeriesImage, lastSeriesImage)\r\n        .step(1)\r\n        .listen();\r\n\r\n    const modeToApplySlicing = 'interpolation';\r\n    const minValue = 0;\r\n    const maxValue = 1;\r\n    stackFolder\r\n        .add(stackHelper.slice, modeToApplySlicing, minValue, maxValue)\r\n        .step(1)\r\n        .listen();\r\n    stackFolder.open();\r\n}\r\n\r\n\r\nfunction animate() {\r\n    controls.update();\r\n    renderer.render(scene, camera);\r\n\r\n    requestAnimationFrame(function () {\r\n        animate();\r\n    });\r\n}\r\n\r\nanimate();\r\n\r\nvar loader = new AMI.VolumeLoader(container);\r\nvar file = 'https://cdn.rawgit.com/FNNDSC/data/master/nifti/adi_brain/adi_brain.nii.gz';\r\n\r\nloader\r\n    .load(file)\r\n    .then(function () {\r\n\r\n        var series = mergeFilesIntoCleanSeriesStackFrameStructure();\r\n        var stack = createStackOfASeriesOfImages();\r\n        detachLoaderAndProgressBarFromDOM();\r\n        var stackHelper = createStackHelperToManipulateOrientationAndSliceDisplayed();\r\n\r\n        stackHelper.bbox.visible = false;\r\n        const orangeColor = 0xff9800;\r\n        stackHelper.border.color = orangeColor;\r\n        scene.add(stackHelper);\r\n        gui(stackHelper, 'my-gui-container');\r\n\r\n        var worldbb = stack.worldBoundingBox();\r\n        const adjustBorderBoxStackHelperDimensionsToFitInWindow = new THREE.Vector3(worldbb[1] - worldbb[0], worldbb[3] - worldbb[2], worldbb[5] - worldbb[4]);\r\n        var lpsDims = adjustBorderBoxStackHelperDimensionsToFitInWindow;\r\n\r\n        var box = {\r\n            center: stack.worldCenter().clone(),\r\n            halfDimensions: new THREE.Vector3(lpsDims.x + 10, lpsDims.y + 10, lpsDims.z + 10)\r\n        };\r\n\r\n        var initCanvasAndZoom = {\r\n            width: container.clientWidth,\r\n            height: container.clientHeight,\r\n        };\r\n\r\n        const ratioBetweenTheAdjacentCatechusAndHypotenuse = [stack.xCosine, stack.yCosine, stack.zCosine];\r\n        camera.directions = ratioBetweenTheAdjacentCatechusAndHypotenuse;\r\n        camera.box = box;\r\n        camera.canvas = initCanvasAndZoom;\r\n        camera.update();\r\n        const numberOfDirectionsToRecalculateZoom = 2;\r\n        camera.fitBox(numberOfDirectionsToRecalculateZoom);\r\n\r\n        function mergeFilesIntoCleanSeriesStackFrameStructure() {\r\n            const target = 0;\r\n            var series = loader.data[target].mergeSeries(loader.data);\r\n            return series;\r\n        }\r\n\r\n        function createStackOfASeriesOfImages() {\r\n            return series[0].stack[0];\r\n        }\r\n\r\n        function detachLoaderAndProgressBarFromDOM() {\r\n            loader.free();\r\n        }\r\n\r\n        function createStackHelperToManipulateOrientationAndSliceDisplayed() {\r\n            return new AMI.StackHelper(stack);\r\n        }\r\n    })\r\n    .catch(function (error) {\r\n        window.console.log('oops... something went wrong...');\r\n        window.console.log(error);\r\n    });\r\n\r\nfunction setRenderer() {\r\n    var container = document.getElementById('container');\r\n    const smoothBorders = true;\r\n\r\n    var renderer = new THREE.WebGLRenderer({\r\n        antialias: smoothBorders\r\n    });\r\n    renderer.setSize(container.offsetWidth, container.offsetHeight);\r\n\r\n    const blackColor = 0x353535;\r\n    const alpha = 1;\r\n\r\n    renderer.setClearColor(blackColor, alpha);\r\n    renderer.setPixelRatio(window.devicePixelRatio);\r\n    container.appendChild(renderer.domElement);\r\n    return {container: container, renderer: renderer};\r\n}\r\n\r\nfunction setCamera() {\r\n\r\n    const left = container.clientWidth / -2;\r\n    const right = container.clientWidth / 2;\r\n    const top = container.clientHeight / 2;\r\n    const bottom = container.clientHeight / -2;\r\n    const near = 0.1;\r\n    const far = 10000;\r\n\r\n    return new AMI.OrthographicCamera(\r\n        left,\r\n        right,\r\n        top,\r\n        bottom,\r\n        near,\r\n        far\r\n    );\r\n}\r\n\r\nfunction setControls() {\r\n    var controls = new AMI.TrackballOrthoControl(camera, container);\r\n    controls.staticMoving = true;\r\n    controls.noRotate = true;\r\n    camera.controls = controls;\r\n    return controls;\r\n}"]}