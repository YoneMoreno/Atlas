{"version":3,"sources":["../../../../ami/lessons/04/demo.js"],"names":["controls","renderer","camera","statsyay","threeD","sceneLayer0TextureTarget","sceneLayer1TextureTarget","sceneLayer0","lutLayer0","sceneLayer1","meshLayer1","uniformsLayer1","materialLayer1","lutLayer1","sceneLayerMix","meshLayerMix","uniformsLayerMix","materialLayerMix","layerMix","opacity1","init","animate","update","renderFirstLayerOffScreen","forceClear","render","renderSecondLayerOffScreen","mixTheLayersAndRenderItOnScreen","requestAnimationFrame","setRenderer","createRenderer","document","getElementById","smoothBorders","opacity","THREE","WebGLRenderer","antialias","alpha","setupRenderer","setSize","clientWidth","clientHeight","blueBackgroundColor","setClearColor","appendChild","domElement","setStats","Stats","setScene","Scene","renderFirstLayerAsTexture","WebGLRenderTarget","minFilter","LinearFilter","magFilter","NearestFilter","format","RGBAFormat","renderSecondLayerAsTexture","setCamera","left","right","top","bottom","near","far","AMI","OrthographicCamera","setControls","TrackballOrthoControl","smoothMove","staticMoving","noRotate","setData","rawgit","dataFullPath","data","map","currentData","labelmapFullPath","setLabelMap","labelmap","files","concat","loader","loadAndParseData","VolumeLoader","buildGUI","stackHelper","updateLayer1","bundleSlicesToMesh","geometry","dispose","slice","verticesNeedUpdate","updateLayerMix","resetLayerMix","remove","material","addMeshToLayerMix","Mesh","convertCoordinateSystemFromIJKToLeftPosteriorSuperior","applyMatrix","stack","_ijk2LPS","add","createGui","gui","dat","GUI","autoPlace","setGuiIntoDOM","customContainer","layer0Folder","createCTPanel","CTLabel","addFolder","setInvertCheckBox","setColorSchemasDropDown","lutUpdate","lutsAvailable","onChange","value","lut","lutTexture","texture","setIndexSlider","min","max","dimensionsIJK","z","indexUpdate","step","listen","setInterpolationSlider","open","layerMixFolder","setSegmentationPanel","setOpacitySlider","opacityLayerMix1","uOpacity1","addScrollControlToChangeCurrentSlice","addEventListener","e","delta","index","onWindowResize","canvas","width","height","directionsUsedToResizeImage","fitBox","useCaptureToExecuteEventOnWindowLoad","window","handleSeries","setStack","mergedSeries","stack2","mergeSeries","closeLoader","free","isImageSegmented","modality","setStackHelper","StackHelper","bbox","visible","border","textures2","setTextureFromRawData","prepare","pack","m","_rawData","length","tex","DataTexture","rawData","textureSize","textureType","UnsignedByteType","UVMapping","ClampToEdgeWrapping","needsUpdate","flipY","push","setShaderUsingTexturePositionColorBorder","DataUniformShader","uniforms","setShaderTextureSize","uTextureSize","setShaderTextureContainer","uTextureContainer","convertLeftPosteriorSuperiorDICOMCorrdinatesTo2DWorldCoordinates","uWorldToData","lps2IJK","setShaderTextureNumberOfChannels","uNumberOfChannels","numberOfChannels","setShaderTexturePixelTypeAsIntOrFloat","uPixelType","pixelType","setAllocatedBits","uBitsAllocated","bitsAllocated","setShaderTextureCenter","windowCenter","windowWidth","uWindowCenterWidth","setShaderTextureRescaleSlope","rescaleSlope","rescaleIntercept","uRescaleSlopeIntercept","setShaderTextureDataDimensions","xDimension","x","yDimension","y","zDimension","uDataDimensions","setShaderTextureInterpolationMode","uInterpolation","createShadersToRepresentSegment","fs","DataFragmentShader","vs","DataVertexShader","ShaderMaterial","side","DoubleSide","vertexShader","compute","fragmentShader","createMeshWIthShaders","convertToLeftPosteriorSuperiorDICOMCorrdinates","createMixLayer","LayerUniformShader","uTextureBackTest0","uTextureBackTest1","fls","LayerFragmentShader","vls","LayerVertexShader","transparent","createMeshMixLayer","convertMixLayerToLPSDICOMCoordinates","lpsDims","worldbb","worldBoundingBox","widthLPSDimension","heightLPSDimension","depthLPSDimension","Vector3","box","center","worldCenter","clone","halfDimensions","directions","xCosine","yCosine","zCosine","LutHelper","luts","presetLuts","segmentationLUT","segmentationLUTO","uLut","uTextureLUT","load","then","catch","error","console","log"],"mappings":"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","file":"demo.js","sourcesContent":["/* globals Stats, dat, AMI*/\r\n\r\n// standard global variables\r\nvar controls;\r\nvar renderer;\r\nvar camera;\r\nvar statsyay;\r\nvar threeD;\r\n//\r\nvar sceneLayer0TextureTarget;\r\nvar sceneLayer1TextureTarget;\r\n//\r\nvar sceneLayer0;\r\n//\r\nvar lutLayer0;\r\nvar sceneLayer1;\r\nvar meshLayer1;\r\nvar uniformsLayer1;\r\nvar materialLayer1;\r\nvar lutLayer1;\r\nvar sceneLayerMix;\r\nvar meshLayerMix;\r\nvar uniformsLayerMix;\r\nvar materialLayerMix;\r\n\r\nvar layerMix = {\r\n    opacity1: 1.0,\r\n};\r\n\r\n\r\nfunction init() {\r\n\r\n    function animate() {\r\n        // render\r\n        controls.update();\r\n\r\n        renderFirstLayerOffScreen();\r\n\r\n        function renderFirstLayerOffScreen() {\r\n            const forceClear = true;\r\n            renderer.render(sceneLayer0, camera, sceneLayer0TextureTarget, forceClear);\r\n        }\r\n\r\n        renderSecondLayerOffScreen();\r\n\r\n        function renderSecondLayerOffScreen() {\r\n            const forceClear = true;\r\n            renderer.render(sceneLayer1, camera, sceneLayer1TextureTarget, forceClear);\r\n        }\r\n\r\n        mixTheLayersAndRenderItOnScreen();\r\n\r\n        function mixTheLayersAndRenderItOnScreen() {\r\n            renderer.render(sceneLayerMix, camera);\r\n            statsyay.update();\r\n        }\r\n\r\n        requestAnimationFrame(function () {\r\n            animate();\r\n        });\r\n    }\r\n\r\n    setRenderer();\r\n\r\n    function setRenderer() {\r\n\r\n        createRenderer();\r\n\r\n        function createRenderer() {\r\n            threeD = document.getElementById('container');\r\n            const smoothBorders = true;\r\n            const opacity = true;\r\n            renderer = new THREE.WebGLRenderer({\r\n                antialias: smoothBorders,\r\n                alpha: opacity,\r\n            });\r\n        }\r\n\r\n        setupRenderer();\r\n\r\n        function setupRenderer() {\r\n            renderer.setSize(threeD.clientWidth, threeD.clientHeight);\r\n            const blueBackgroundColor = 0x607d8b;\r\n            const alpha = 1;\r\n            renderer.setClearColor(blueBackgroundColor, alpha);\r\n            threeD.appendChild(renderer.domElement);\r\n        }\r\n\r\n    }\r\n\r\n\r\n    setStats();\r\n\r\n    function setStats() {\r\n        statsyay = new Stats();\r\n        threeD.appendChild(statsyay.domElement);\r\n    }\r\n\r\n    setScene();\r\n\r\n    function setScene() {\r\n        sceneLayer0 = new THREE.Scene();\r\n        sceneLayer1 = new THREE.Scene();\r\n        sceneLayerMix = new THREE.Scene();\r\n    }\r\n\r\n    renderFirstLayerAsTexture();\r\n\r\n    function renderFirstLayerAsTexture() {\r\n        sceneLayer0TextureTarget = new THREE.WebGLRenderTarget(threeD.clientWidth, threeD.clientHeight, {\r\n            minFilter: THREE.LinearFilter,\r\n            magFilter: THREE.NearestFilter,\r\n            format: THREE.RGBAFormat,\r\n        });\r\n    }\r\n\r\n    renderSecondLayerAsTexture();\r\n\r\n    function renderSecondLayerAsTexture() {\r\n        sceneLayer1TextureTarget = new THREE.WebGLRenderTarget(threeD.clientWidth, threeD.clientHeight, {\r\n            minFilter: THREE.LinearFilter,\r\n            magFilter: THREE.NearestFilter,\r\n            format: THREE.RGBAFormat,\r\n        });\r\n    }\r\n\r\n    setCamera();\r\n\r\n    function setCamera() {\r\n        const left = threeD.clientWidth / -2;\r\n        const right = threeD.clientWidth / 2;\r\n        const top = threeD.clientHeight / 2;\r\n        const bottom = threeD.clientHeight / -2;\r\n        const near = 0.1;\r\n        const far = 10000;\r\n        camera = new AMI.OrthographicCamera(\r\n            left,\r\n            right,\r\n            top,\r\n            bottom,\r\n            near,\r\n            far\r\n        );\r\n    }\r\n\r\n\r\n    setControls();\r\n\r\n    function setControls() {\r\n        controls = new AMI.TrackballOrthoControl(camera, threeD);\r\n        const smoothMove = true;\r\n        controls.staticMoving = smoothMove;\r\n        controls.noRotate = true;\r\n        camera.controls = controls;\r\n    }\r\n\r\n\r\n    animate();\r\n}\r\n\r\ninit();\r\n\r\nvar {rawgit, dataFullPath} = setData();\r\n\r\nfunction setData() {\r\n    var data = [\r\n        '000183.dcm',\r\n        '000219.dcm',\r\n        '000117.dcm',\r\n        '000240.dcm',\r\n        '000033.dcm',\r\n        '000060.dcm',\r\n        '000211.dcm',\r\n        '000081.dcm',\r\n        '000054.dcm',\r\n        '000090.dcm',\r\n        '000042.dcm',\r\n        '000029.dcm',\r\n        '000239.dcm',\r\n        '000226.dcm',\r\n        '000008.dcm',\r\n        '000128.dcm',\r\n        '000089.dcm',\r\n        '000254.dcm',\r\n        '000208.dcm',\r\n        '000047.dcm',\r\n        '000067.dcm'\r\n    ];\r\n\r\n    var rawgit = 'https://cdn.rawgit.com/FNNDSC/data/master/dicom/andrei_abdomen/';\r\n\r\n    var dataFullPath = data.map(function (currentData) {\r\n        return rawgit + 'data/' + currentData;\r\n    });\r\n    return {rawgit, dataFullPath};\r\n}\r\n\r\n\r\nvar labelmapFullPath = setLabelMap();\r\n\r\nfunction setLabelMap() {\r\n    var labelmap = ['000000.dcm'];\r\n\r\n    var labelmapFullPath = labelmap.map(function (currentData) {\r\n        return rawgit + 'segmentation/' + currentData;\r\n    });\r\n    return labelmapFullPath;\r\n}\r\n\r\n\r\nvar files = dataFullPath.concat(labelmapFullPath);\r\n\r\nvar loader = loadAndParseData();\r\n\r\nfunction loadAndParseData() {\r\n    var loader = new AMI.VolumeLoader(threeD);\r\n    return loader;\r\n}\r\n\r\nfunction buildGUI(stackHelper) {\r\n\r\n    function updateLayer1() {\r\n        if (meshLayer1) {\r\n            bundleSlicesToMesh();\r\n        }\r\n    }\r\n\r\n    function bundleSlicesToMesh() {\r\n        meshLayer1.geometry.dispose();\r\n        meshLayer1.geometry = stackHelper.slice.geometry;\r\n        meshLayer1.geometry.verticesNeedUpdate = true;\r\n    }\r\n\r\n\r\n    /**\r\n     * Update layer mix\r\n     */\r\n\r\n// update layer1 geometry...\r\n    function updateLayerMix() {\r\n\r\n\r\n        if (meshLayerMix) {\r\n            resetLayerMix();\r\n\r\n            function resetLayerMix() {\r\n                sceneLayerMix.remove(meshLayerMix);\r\n                meshLayerMix.material.dispose();\r\n                meshLayerMix.material = null;\r\n                meshLayerMix.geometry.dispose();\r\n                meshLayerMix.geometry = null;\r\n            }\r\n\r\n            addMeshToLayerMix();\r\n\r\n            function addMeshToLayerMix() {\r\n                const geometry = stackHelper.slice.geometry;\r\n                const material = materialLayerMix;\r\n                meshLayerMix = new THREE.Mesh(geometry, material);\r\n            }\r\n\r\n\r\n            convertCoordinateSystemFromIJKToLeftPosteriorSuperior();\r\n\r\n            function convertCoordinateSystemFromIJKToLeftPosteriorSuperior() {\r\n                meshLayerMix.applyMatrix(stackHelper.stack._ijk2LPS);\r\n            }\r\n\r\n            sceneLayerMix.add(meshLayerMix);\r\n        }\r\n    }\r\n\r\n    var {stack, gui} = createGui();\r\n\r\n    function createGui() {\r\n        var stack = stackHelper.stack;\r\n\r\n        var gui = new dat.GUI({\r\n            autoPlace: false,\r\n        });\r\n        return {stack, gui};\r\n    }\r\n\r\n\r\n    setGuiIntoDOM();\r\n\r\n    function setGuiIntoDOM() {\r\n        var customContainer = document.getElementById('my-gui-container');\r\n        customContainer.appendChild(gui.domElement);\r\n    }\r\n\r\n\r\n    var layer0Folder = createCTPanel();\r\n\r\n    function createCTPanel() {\r\n        const CTLabel = 'CT';\r\n        var layer0Folder = gui.addFolder(CTLabel);\r\n        return layer0Folder;\r\n    }\r\n\r\n\r\n    setInvertCheckBox();\r\n\r\n    function setInvertCheckBox() {\r\n        layer0Folder.add(stackHelper.slice, 'invert');\r\n    }\r\n\r\n\r\n    setColorSchemasDropDown();\r\n\r\n    function setColorSchemasDropDown() {\r\n\r\n\r\n        var lutUpdate = layer0Folder.add(stackHelper.slice, 'lut', lutLayer0.lutsAvailable());\r\n        lutUpdate.onChange(function (value) {\r\n            lutLayer0.lut = value;\r\n            stackHelper.slice.lutTexture = lutLayer0.texture;\r\n        });\r\n    }\r\n\r\n    setIndexSlider();\r\n\r\n    function setIndexSlider() {\r\n        const min = 0;\r\n        const max = stack.dimensionsIJK.z - 1;\r\n        var indexUpdate = layer0Folder\r\n            .add(stackHelper, 'index', min, max)\r\n            .step(1)\r\n            .listen();\r\n\r\n        indexUpdate.onChange(function () {\r\n            updateLayer1();\r\n            updateLayerMix();\r\n        });\r\n    }\r\n\r\n\r\n    setInterpolationSlider();\r\n\r\n    function setInterpolationSlider() {\r\n        layer0Folder\r\n            .add(stackHelper.slice, 'interpolation', 0, 1)\r\n            .step(1)\r\n            .listen();\r\n    }\r\n\r\n\r\n    layer0Folder.open();\r\n\r\n    var layerMixFolder = setSegmentationPanel();\r\n\r\n    function setSegmentationPanel() {\r\n        var layerMixFolder = gui.addFolder('Segmentation');\r\n        return layerMixFolder;\r\n    }\r\n\r\n\r\n    setOpacitySlider();\r\n\r\n    function setOpacitySlider() {\r\n        const min = 0;\r\n        const max = 1;\r\n        var opacityLayerMix1 = layerMixFolder.add(layerMix, 'opacity1', min, max).step(0.01);\r\n        opacityLayerMix1.onChange(function (value) {\r\n            uniformsLayerMix.uOpacity1.value = value;\r\n        });\r\n    }\r\n\r\n\r\n    layerMixFolder.open();\r\n\r\n    addScrollControlToChangeCurrentSlice();\r\n\r\n    function addScrollControlToChangeCurrentSlice() {\r\n        controls.addEventListener('OnScroll', function (e) {\r\n            if (e.delta > 0) {\r\n                if (stackHelper.index >= stack.dimensionsIJK.z - 1) {\r\n                    return false;\r\n                }\r\n                stackHelper.index += 1;\r\n            } else {\r\n                if (stackHelper.index <= 0) {\r\n                    return false;\r\n                }\r\n                stackHelper.index -= 1;\r\n            }\r\n\r\n            updateLayer1();\r\n            updateLayerMix();\r\n        });\r\n    }\r\n\r\n    updateLayer1();\r\n    updateLayerMix();\r\n\r\n\r\n    function onWindowResize() {\r\n        var threeD = document.getElementById('container');\r\n        camera.canvas = {\r\n            width: threeD.clientWidth,\r\n            height: threeD.clientHeight,\r\n        };\r\n        const directionsUsedToResizeImage = 2;\r\n        camera.fitBox(directionsUsedToResizeImage);\r\n\r\n        renderer.setSize(threeD.clientWidth, threeD.clientHeight);\r\n    }\r\n\r\n    const useCaptureToExecuteEventOnWindowLoad = false;\r\n    window.addEventListener('resize', onWindowResize, useCaptureToExecuteEventOnWindowLoad);\r\n    onWindowResize();\r\n}\r\n\r\nfunction handleSeries() {\r\n\r\n    var {mergedSeries, stack, stack2} = setStack();\r\n\r\n    function setStack() {\r\n        var mergedSeries = loader.data[0].mergeSeries(loader.data);\r\n        var stack = mergedSeries[0].stack[0];\r\n        var stack2 = mergedSeries[1].stack[0];\r\n        return {mergedSeries, stack, stack2};\r\n    }\r\n\r\n    closeLoader();\r\n\r\n    function closeLoader() {\r\n        loader.free();\r\n        loader = null;\r\n    }\r\n\r\n\r\n    if (isImageSegmented()) {\r\n        stack = mergedSeries[0].stack[0];\r\n        stack2 = mergedSeries[1].stack[0];\r\n    }\r\n\r\n    function isImageSegmented() {\r\n        return stack.modality === 'SEG';\r\n    }\r\n\r\n    var stackHelper = setStackHelper();\r\n\r\n    function setStackHelper() {\r\n        var stackHelper = new AMI.StackHelper(stack);\r\n        stackHelper.bbox.visible = false;\r\n        stackHelper.border.visible = false;\r\n        stackHelper.index = 10;\r\n\r\n        sceneLayer0.add(stackHelper);\r\n        return stackHelper;\r\n    }\r\n\r\n\r\n    var textures2 = setTextureFromRawData();\r\n\r\n    function setTextureFromRawData() {\r\n        stack2.prepare();\r\n        stack2.pack();\r\n\r\n        var textures2 = [];\r\n        for (var m = 0; m < stack2._rawData.length; m++) {\r\n            var tex = new THREE.DataTexture(\r\n                stack2.rawData[m],\r\n                stack2.textureSize,\r\n                stack2.textureSize,\r\n                stack2.textureType,\r\n                THREE.UnsignedByteType,\r\n                THREE.UVMapping,\r\n                THREE.ClampToEdgeWrapping,\r\n                THREE.ClampToEdgeWrapping,\r\n                THREE.NearestFilter,\r\n                THREE.NearestFilter\r\n            );\r\n            tex.needsUpdate = true;\r\n            tex.flipY = true;\r\n            textures2.push(tex);\r\n        }\r\n        return textures2;\r\n    }\r\n\r\n    setShaderUsingTexturePositionColorBorder();\r\n\r\n    function setShaderUsingTexturePositionColorBorder() {\r\n        uniformsLayer1 = AMI.DataUniformShader.uniforms();\r\n    }\r\n\r\n    setShaderTextureSize();\r\n\r\n    function setShaderTextureSize() {\r\n        uniformsLayer1.uTextureSize.value = stack2.textureSize;\r\n    }\r\n\r\n    setShaderTextureContainer();\r\n\r\n    function setShaderTextureContainer() {\r\n        uniformsLayer1.uTextureContainer.value = textures2;\r\n    }\r\n\r\n    convertLeftPosteriorSuperiorDICOMCorrdinatesTo2DWorldCoordinates();\r\n\r\n    function convertLeftPosteriorSuperiorDICOMCorrdinatesTo2DWorldCoordinates() {\r\n        uniformsLayer1.uWorldToData.value = stack2.lps2IJK;\r\n    }\r\n\r\n    setShaderTextureNumberOfChannels();\r\n\r\n    function setShaderTextureNumberOfChannels() {\r\n        uniformsLayer1.uNumberOfChannels.value = stack2.numberOfChannels;\r\n    }\r\n\r\n    setShaderTexturePixelTypeAsIntOrFloat();\r\n\r\n    function setShaderTexturePixelTypeAsIntOrFloat() {\r\n        uniformsLayer1.uPixelType.value = stack2.pixelType;\r\n    }\r\n\r\n    setAllocatedBits();\r\n\r\n    function setAllocatedBits() {\r\n        uniformsLayer1.uBitsAllocated.value = stack2.bitsAllocated;\r\n    }\r\n\r\n    setShaderTextureCenter();\r\n\r\n    function setShaderTextureCenter() {\r\n        const windowCenter = stack2.windowCenter;\r\n        const windowWidth = stack2.windowWidth;\r\n        uniformsLayer1.uWindowCenterWidth.value = [windowCenter, windowWidth];\r\n    }\r\n\r\n    setShaderTextureRescaleSlope();\r\n\r\n    function setShaderTextureRescaleSlope() {\r\n        const rescaleSlope = stack2.rescaleSlope;\r\n        const rescaleIntercept = stack2.rescaleIntercept;\r\n        uniformsLayer1.uRescaleSlopeIntercept.value = [rescaleSlope, rescaleIntercept];\r\n    }\r\n\r\n    setShaderTextureDataDimensions();\r\n\r\n    function setShaderTextureDataDimensions() {\r\n        const xDimension = stack2.dimensionsIJK.x;\r\n        const yDimension = stack2.dimensionsIJK.y;\r\n        const zDimension = stack2.dimensionsIJK.z;\r\n        uniformsLayer1.uDataDimensions.value = [xDimension, yDimension, zDimension];\r\n    }\r\n\r\n    setShaderTextureInterpolationMode();\r\n\r\n    function setShaderTextureInterpolationMode() {\r\n        uniformsLayer1.uInterpolation.value = 0;\r\n    }\r\n\r\n\r\n    createShadersToRepresentSegment();\r\n\r\n    function createShadersToRepresentSegment() {\r\n        var fs = new AMI.DataFragmentShader(uniformsLayer1);\r\n        var vs = new AMI.DataVertexShader();\r\n        materialLayer1 = new THREE.ShaderMaterial({\r\n            side: THREE.DoubleSide,\r\n            uniforms: uniformsLayer1,\r\n            vertexShader: vs.compute(),\r\n            fragmentShader: fs.compute(),\r\n        });\r\n    }\r\n\r\n    createMeshWIthShaders();\r\n\r\n    function createMeshWIthShaders() {\r\n        meshLayer1 = new THREE.Mesh(stackHelper.slice.geometry, materialLayer1);\r\n    }\r\n\r\n    convertToLeftPosteriorSuperiorDICOMCorrdinates();\r\n\r\n    function convertToLeftPosteriorSuperiorDICOMCorrdinates() {\r\n        meshLayer1.applyMatrix(stack._ijk2LPS);\r\n    }\r\n\r\n    sceneLayer1.add(meshLayer1);\r\n\r\n    createMixLayer();\r\n\r\n    function createMixLayer() {\r\n        uniformsLayerMix = AMI.LayerUniformShader.uniforms();\r\n        uniformsLayerMix.uTextureBackTest0.value = sceneLayer0TextureTarget.texture;\r\n        uniformsLayerMix.uTextureBackTest1.value = sceneLayer1TextureTarget.texture;\r\n\r\n        let fls = new AMI.LayerFragmentShader(uniformsLayerMix);\r\n        let vls = new AMI.LayerVertexShader();\r\n        materialLayerMix = new THREE.ShaderMaterial({\r\n            side: THREE.DoubleSide,\r\n            uniforms: uniformsLayerMix,\r\n            vertexShader: vls.compute(),\r\n            fragmentShader: fls.compute(),\r\n            transparent: true,\r\n        });\r\n    }\r\n\r\n    createMeshMixLayer();\r\n\r\n    function createMeshMixLayer() {\r\n        meshLayerMix = new THREE.Mesh(stackHelper.slice.geometry, materialLayer1);\r\n    }\r\n\r\n    convertMixLayerToLPSDICOMCoordinates();\r\n\r\n    function convertMixLayerToLPSDICOMCoordinates() {\r\n        meshLayerMix.applyMatrix(stack._ijk2LPS);\r\n    }\r\n\r\n    sceneLayerMix.add(meshLayerMix);\r\n\r\n    var lpsDims = setCamera();\r\n\r\n    function setCamera() {\r\n        var worldbb = stack.worldBoundingBox();\r\n        const widthLPSDimension = worldbb[1] - worldbb[0];\r\n        const heightLPSDimension = worldbb[3] - worldbb[2];\r\n        const depthLPSDimension = worldbb[5] - worldbb[4];\r\n        var lpsDims = new THREE.Vector3(widthLPSDimension, heightLPSDimension, depthLPSDimension);\r\n        return lpsDims;\r\n    }\r\n\r\n    // box: {halfDimensions, center}\r\n    var box = {\r\n        center: stack.worldCenter().clone(),\r\n        halfDimensions: new THREE.Vector3(lpsDims.x + 10, lpsDims.y + 10, lpsDims.z + 10)\r\n    };\r\n\r\n    // init and zoom\r\n    var canvas = {\r\n        width: threeD.clientWidth,\r\n        height: threeD.clientHeight,\r\n    };\r\n    camera.directions = [stack.xCosine, stack.yCosine, stack.zCosine];\r\n    camera.box = box;\r\n    camera.canvas = canvas;\r\n    camera.update();\r\n    camera.fitBox(2);\r\n\r\n    // CREATE LUT\r\n    lutLayer0 = new AMI.LutHelper(\r\n        'my-lut-canvases-l0',\r\n        'default',\r\n        'linear',\r\n        [[0, 0, 0, 0], [1, 1, 1, 1]],\r\n        [[0, 1], [1, 1]]\r\n    );\r\n    lutLayer0.luts = AMI.LutHelper.presetLuts();\r\n\r\n    lutLayer1 = new AMI.LutHelper(\r\n        'my-lut-canvases-l1',\r\n        'default',\r\n        'linear',\r\n        stack2.segmentationLUT,\r\n        stack2.segmentationLUTO,\r\n        true\r\n    );\r\n    uniformsLayer1.uLut.value = 1;\r\n    uniformsLayer1.uTextureLUT.value = lutLayer1.texture;\r\n\r\n    buildGUI(stackHelper);\r\n}\r\n\r\nloader\r\n    .load(files)\r\n    .then(function () {\r\n        handleSeries();\r\n    })\r\n    .catch(function (error) {\r\n        window.console.log('oops... something went wrong...');\r\n        window.console.log(error);\r\n    });\r\n"]}