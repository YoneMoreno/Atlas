{"version":3,"sources":["../../../../../ami/src/helpers/x/helpers.x.volume.js"],"names":["_file","_progressbarContainer","_stack","_centerLPS","_xSlice","_ySlice","_zSlice","orientation","stackHelper","border","color","bbox","visible","stack","worldCenter","file","loader","load","then","Promise","resolve","reject","data","length","message","series","mergeSeries","free","_createSlice","add","catch","error","window","console","log","fname","container","THREE","Object3D"],"mappings":"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","file":"helpers.x.volume.js","sourcesContent":["/**\r\n * @module helpers/x/volume\r\n */\r\nimport HelpersStack from '../helpers.stack';\r\nimport LoadersVolume from '../../loaders/loaders.volume';\r\n\r\nexport default class extends THREE.Object3D {\r\n  constructor() {\r\n    super();\r\n\r\n    this._file = null;\r\n    this._progressbarContainer = null;\r\n    this._stack = null;\r\n    this._centerLPS = null;\r\n    this._xSlice = null;\r\n    this._ySlice = null;\r\n    this._zSlice = null;\r\n  }\r\n\r\n  // accessor properties\r\n  get file() {\r\n    return this._file;\r\n  }\r\n\r\n  set file(fname) {\r\n    this._file = fname;\r\n  }\r\n\r\n  set progressbarContainer(container) {\r\n    this._progressbarContainer = container;\r\n  }\r\n\r\n  get centerLPS() {\r\n    return this._centerLPS;\r\n  }\r\n\r\n  get stack() {\r\n    return this._stack;\r\n  }\r\n\r\n  // private methods\r\n  _createSlice(orientation) {\r\n    if (this._stack) {\r\n      const stackHelper = new HelpersStack(this._stack);\r\n      stackHelper.orientation = orientation;\r\n\r\n      if (orientation===0) {\r\n        stackHelper.border.color = 0xF44336;\r\n        this._xSlice = stackHelper;\r\n      } else if (orientation===1) {\r\n        stackHelper.bbox.visible = false;\r\n        stackHelper.border.color = 0x4CAF50;\r\n        this._ySlice = stackHelper;\r\n      } else {\r\n        stackHelper.bbox.visible = false;\r\n        stackHelper.border.color = 0x2196F3;\r\n        this._zSlice = stackHelper;\r\n      }\r\n\r\n      this._centerLPS = stackHelper.stack.worldCenter();\r\n    }\r\n  }\r\n\r\n  // public methods\r\n  load() {\r\n    if (this.file) {\r\n      // instantiate the loader\r\n      // it loads and parses the dicom image\r\n      const loader = new LoadersVolume(this._progressbarContainer);\r\n      return loader.load(this.file).then(() => {\r\n        return new Promise((resolve, reject) => {\r\n          if (loader.data.length <= 0) {\r\n            return reject({message: `No data loaded: ${loader.data}.`});\r\n          }\r\n\r\n          // create the three slices when all files have been loaded\r\n          const series = loader.data[0].mergeSeries(loader.data)[0];\r\n          loader.free();\r\n\r\n          this._stack = series.stack[0];\r\n          this._createSlice(0);\r\n          this.add(this._xSlice);\r\n          this._createSlice(1);\r\n          this.add(this._ySlice);\r\n          this._createSlice(2);\r\n          this.add(this._zSlice);\r\n\r\n          return resolve(this);\r\n        });\r\n      }).catch(function(error) {\r\n        loader.free();\r\n        window.console.log('Something went wrong loading the volume...');\r\n        window.console.log(error);\r\n      });\r\n    }\r\n\r\n    return Promise.reject({message: `File not defined: ${this.file}.`});\r\n  }\r\n}\r\n"]}